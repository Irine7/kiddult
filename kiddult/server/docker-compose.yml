version: '3.8'

services:
  # MongoDB service
  mongodb:
    image: mongo:6.0
    container_name: location-verification-mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=location-verification
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - location-verification-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/location-verification --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis service
  redis:
    image: redis:7.0-alpine
    container_name: location-verification-redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --requirepass redispassword
    volumes:
      - redis_data:/data
    networks:
      - location-verification-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redispassword", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: location-verification-app
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://location_user:location_password@mongodb:27017/location-verification
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redispassword
      - NOKIA_API_KEY=${NOKIA_API_KEY}
      - NOKIA_API_SECRET=${NOKIA_API_SECRET}
      - NOKIA_API_BASE_URL=${NOKIA_API_BASE_URL}
      - NOTIFICATION_SERVICE_URL=${NOTIFICATION_SERVICE_URL}
      - NOTIFICATION_API_KEY=${NOTIFICATION_API_KEY}
    networks:
      - location-verification-network
    volumes:
      - ./logs:/home/node/app/logs

networks:
  location-verification-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: